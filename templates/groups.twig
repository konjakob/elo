{% extends 'layout_dashboard.twig' %}

{% block vars %}
{% endblock %}

{% block default %}

<div class="uk-child-width-1-2@m uk-child-width-1-1@s uk-margin-top" uk-grid>

{{ msg_group }}

{% if 'CREATE_GROUPS' in user_rights %}	
<div>
	<div class="uk-card uk-card-default uk-card-body uk-margin">
		<h2 class="uk-card-title">New Group</h2>
		<form action="{{ current_url }}" class="uk-form-stacked" method="post">
			<div class="uk-margin">
				<label class="uk-form-label" for="group_name">Name</label>
				<div class="uk-form-controls">
					<input class="uk-input" id="group_name" type="text" name="t_group" placeholder="Name">
				</div>
			</div>
			<div class="uk-text-right">
				<input type="submit" value="Save" name="new_group" class="uk-button uk-button-primary" />
			</div>
		</form>
	</div>
</div>
{% endif %}

<div>
	<div class="uk-card uk-card-default uk-card-body uk-margin">
		<h2 class="uk-card-title">Groups</h2>
{% for g in groups %}
	<span><a onclick="javascript:loadGroupData({{ g.group_id }});" id="group-list-{{ g.group_id }}">{{ g.group_name }}</a>
	(<a onclick="javascript:deleteGroup({{ g.group_id }});">Delete</a> | <a onclick="javascript:changeGroupData({{ g.group_id }});">Modify</a>)</span><br>

{% endfor %}
	</div>			
</div>

</div>

	
<div id="modal-group-users" uk-modal>
    <div class="uk-modal-dialog">

        <button class="uk-modal-close-default" type="button" uk-close></button>

        <div class="uk-modal-header">
            <h2 class="uk-modal-title">User of group <span></span></h2>
        </div>

        <div class="uk-modal-body" uk-overflow-auto>

            <p><select id="users-of-group" size='5' class="uk-select" multiple='multiple'></select></p>
			<p class="uk-text-right"><button class="uk-button uk-button-primary" id="remove-group-user">Remove</button></p>
        </div>

    </div>
</div>
	
{% endblock %}		  

{% block footerInjection %}


<script language="javascript">  

	function deleteGroup(groupId) {
		var el = $(this);
		UIkit.modal.confirm('Confirm deletion').then(function() {
			$.post("actions.php",
			{	  
			  delete_group:groupId,
			  action:'deleteGroup'
			},
			function(data,status){
				if ( data.state == 'ok' ) {
					el.parent().remove();
					toastr["success"]("Group deleted", "Success");
				} else {
					toastr["error"]("Error", "Error");
				}
			});
		}, function () {
			
		});
	}

	function removeGroup() {
		$.post("actions.php",
		{	  
		  userid:$('#user_id_c').val(),
		  action:'removeGroup',
		  t_r:$("#us_groups_c").val()
		},
		function(data,status){
			$('#us_groups_c option:selected').each(function(){
				$("<option/>").val($(this).val()).text($(this).text()).prependTo("#ex_groups_c");
				$("#us_groups_c option[value="+$(this).val()+"]").remove();
			});
		});
	}
	function addGroup() {
		$.post("actions.php",
		{	  
		  userid:$('#user_id_c').val(),
		  action:'addGroup',
		  t_r:$("#ex_groups_c").val()
		},
		function(data,status){
			$('#ex_groups_c option:selected').each(function(){
				$("<option/>").val($(this).val()).text($(this).text()).prependTo("#us_groups_c");
				$("#ex_groups_c option[value="+$(this).val()+"]").remove();
			});
		});
	}
	
	$('#remove-group-user').click(function() {
		$('#users-of-group option:selected').each(function(){
			var el = $(this);
			$.ajax({
				url: 'actions.php',
				dataType: 'json',
				method: 'POST',
				data: 
				{	  
					guid:$(this).val(),
					action:'removeUserFromGoup',
				},
				success: function(respond){
					if ( respond.state == 'ok' ) {
						$("#users-of-group option[value="+el.val()+"]").remove();
					} else {
						toastr["error"]("Error", "Error");
					}
				}
			});			
		});
	});
	

	function tgldiv(divname){
		$("#"+divname).slideToggle("slow");
	 };

  function loadGroupData(id) {
	  $.ajax({
				url: "actions.php?action=getGroupUser&group_id="+id,
				dataType: 'json',
				success: function(respond)
				{
					if ( respond.state == 'ok' ) {
						$('#users-of-group').empty();
						$.each(respond.users,function(key, value) {
							$('#users-of-group').append('<option value=' + key + '>' + value + '</option>');
						});
						UIkit.modal($('#modal-group-users')).show();
					} else {
						toastr["error"](respond.text, respond.title);
					}
				}
		});
  }
  
  function changeGroupData(id) {
	var el = $(this);
	var ael = $('#group-list-' + id);
	UIkit.modal.prompt('Group:', ael.text()).then(function (name) {
		if ( name ) {
			var strName = name;
			$.ajax({
				url: 'actions.php',
				dataType: 'json',
				method: 'POST',
				data: 
				{	  
				  guid: id,
				  action: 'changeGoup',
				  t_name: strName
				},
				success: function(respond){
					if ( respond.state == 'ok' ) {
						ael.text(strName);
						toastr["success"]("Group modified", "Success");
					} else {
						toastr["error"]("Error", "Error");
					}
				}
			});
		}
	});

  }
  

	function selectAllOptions(selStr)
	{
	  var selObj = document.getElementById(selStr);
	  for (var i=0; i<selObj.options.length; i++) {
		selObj.options[i].selected = true;
	  }
	}
	
	$("#frmNewTopic").submit(function(e){
        e.preventDefault();
		$.ajax({
			url: 'actions.php',
			dataType: 'json',
			method: 'POST',
			data: $('#frmNewTopic').serialize(),
			success: function(respond){
				if ( respond.state == 'ok' ) {
					$("#submitTopic").closest('form').find("input[type=text], textarea").val("");
					toastr["success"]("Successfully posted", "Success");
				} else {
					toastr["error"]("Error", "Error");
				}
			}
		});		  
  
  });
	
</script>
			
{% endblock %}	
