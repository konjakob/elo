{% extends 'layout_dashboard.twig' %}

{% block vars %}
{% endblock %}

{% block default %}

{% if 'CREATE_GROUPS' in user_rights %}	
<div class="uk-text-right">
	<a id="js-modal-new-group" class="uk-button uk-button-primary" href="#">New Group</a>
</div>
{% endif %}

<div class="uk-child-width-1-1 uk-margin-top" uk-grid>

    <div>
        <div class="uk-card uk-card-default uk-card-body uk-margin">
            <h2 class="uk-card-title">Groups</h2>
            
            <div class="uk-column-1-2@s uk-column-1-3@m uk-column-1-4@l">
                <ul class="uk-list" id="groupList">
                {% for g in groups %}
                    <li><a onclick="javascript:loadGroupData({{ g.group_id }});" id="group-list-{{ g.group_id }}">{{ g.group_name }}</a>
                    (<a onclick="javascript:deleteGroup({{ g.group_id }});">Delete</a> | <a onclick="javascript:changeGroupData({{ g.group_id }});">Modify</a>)</li>
                {% endfor %}
                </ul>
            </div>
        </div>			
    </div>

</div>

<div class="uk-text-center">
    <ul class="uk-pagination">
        {% for p in pages %}
            <li class="{% if p.active %}uk-active{% endif %}"><a href="{{ p.href }}">{{ p.text }}</a></li>
        {% endfor %}
    </ul>
</div>	
	
<div id="modal-group-users" uk-modal>
    <div class="uk-modal-dialog">

        <button class="uk-modal-close-default" type="button" uk-close></button>

        <div class="uk-modal-header">
            <h2 class="uk-modal-title">User of group <span></span></h2>
        </div>

        <div class="uk-modal-body" uk-overflow-auto>
            <p><select id="users-of-group" size='5' class="uk-select" multiple='multiple'></select></p>
			<p class="uk-text-right"><button class="uk-button uk-button-primary" id="remove-group-user">Remove</button></p>
        </div>

    </div>
</div>
	
{% endblock %}		  

{% block footerInjection %}


<script language="javascript">  

	function deleteGroup(groupId) {
		var el = $(this);
		UIkit.modal.confirm('Confirm deletion').then(function() {
			$.ajax({
				url: 'actions.php',
				dataType: 'json',
				method: 'POST',
				data: 
				{	  
					delete_group:groupId,
					action:'deleteGroup'
				},
				success: function(respond){
					if ( data.state == 'ok' ) {
						toastr["success"]("Group deleted", "Success");
						el.parent().remove();
					} else {
						toastr["error"]("Error", "Error");
					}
				}
			});	

		}, function () {
			
		});
	}

	function removeGroup() {
		$.post("actions.php",
		{	  
		  userid:$('#user_id_c').val(),
		  action:'removeGroup',
		  t_r:$("#us_groups_c").val()
		},
		function(data,status){
			$('#us_groups_c option:selected').each(function(){
				$("<option/>").val($(this).val()).text($(this).text()).prependTo("#ex_groups_c");
				$("#us_groups_c option[value="+$(this).val()+"]").remove();
			});
		});
	}
	function addGroup() {
		$.post("actions.php",
		{	  
		  userid:$('#user_id_c').val(),
		  action:'addGroup',
		  t_r:$("#ex_groups_c").val()
		},
		function(data,status){
			$('#ex_groups_c option:selected').each(function(){
				$("<option/>").val($(this).val()).text($(this).text()).prependTo("#us_groups_c");
				$("#ex_groups_c option[value="+$(this).val()+"]").remove();
			});
		});
	}
	
	$('#remove-group-user').click(function() {
		$('#users-of-group option:selected').each(function(){
			var el = $(this);
			$.ajax({
				url: 'actions.php',
				dataType: 'json',
				method: 'POST',
				data: 
				{	  
					guid:$(this).val(),
					action:'removeUserFromGoup',
				},
				success: function(respond){
					if ( respond.state == 'ok' ) {
						$("#users-of-group option[value="+el.val()+"]").remove();
					} else {
						toastr["error"]("Error", "Error");
					}
				}
			});			
		});
	});
	

  function loadGroupData(id) {
	  $.ajax({
				url: "actions.php?action=getGroupUser&group_id="+id,
				dataType: 'json',
				success: function(respond)
				{
					if ( respond.state == 'ok' ) {
						$('#users-of-group').empty();
						$.each(respond.users,function(key, value) {
							$('#users-of-group').append('<option value=' + key + '>' + value + '</option>');
						});
						UIkit.modal($('#modal-group-users')).show();
					} else {
						toastr["error"](respond.text, respond.title);
					}
				}
		});
  }
  
  function changeGroupData(id) {
	var el = $(this);
	var ael = $('#group-list-' + id);
	UIkit.modal.prompt('Group:', ael.text()).then(function (name) {
		if ( name ) {
			var strName = name;
			$.ajax({
				url: 'actions.php',
				dataType: 'json',
				method: 'POST',
				data: 
				{	  
				  guid: id,
				  action: 'changeGoup',
				  t_name: strName
				},
				success: function(respond){
					if ( respond.state == 'ok' ) {
						ael.text(strName);
						toastr["success"]("Group modified", "Success");
					} else {
						toastr["error"]("Error", "Error");
					}
				}
			});
		}
	});

  }
  

{% if 'CREATE_GROUPS' in user_rights %}		
	UIkit.util.on('#js-modal-new-group', 'click', function (e) {
	   e.preventDefault();
	   e.target.blur();
	   UIkit.modal.prompt('Name:', 'Group name').then(function (name) {
		   if ( name ) {
				$.ajax({
					url: 'actions.php',
					dataType: 'json',
					method: 'POST',
					data: 
					{	  
						t_group:name,
						action:'newGroup'
					},
					success: function(respond){
						if ( respond.state == 'ok' ) {
							$("#groupList").append('<li><a onclick="javascript:loadGroupData(' + respond.groupId + ');" id="group-list-' + respond.groupId + '">' + name + '</a>
                (<a onclick="javascript:deleteGroup(' + respond.groupId + ');">Delete</a> | <a onclick="javascript:changeGroupData(' + respond.groupId + ');">Modify</a>)</li>');
							toastr["success"](respond.text, respond.title);
						} else {
							toastr["error"](respond.text, respond.title);
						}
					}
				});	
		   }
	   });
   });
{% endif %}	
	
</script>
			
{% endblock %}	
